{"ast":null,"code":"import*as axios from\"axios\";var instance=axios.create({withCredentials:true,headers:{\"API-KEY\":\"28a27ba4-71f9-4c48-8005-943f7cabf7a3\"},baseURL:'https://social-network.samuraijs.com/api/1.0/'});export var usersAPI={getUsers:function getUsers(currentPage,pageSize){return instance.get(\"users?page=\".concat(currentPage,\"&count=\").concat(pageSize)).then(function(response){return response.data;});},follow:function follow(userId){return instance.post(\"/follow/\".concat(userId));},unfollow:function unfollow(userId){return instance.delete(\"/follow/\".concat(userId));},getProfile:function getProfile(userId){console.warn('Obsolete method.Please use Profile obj');return profileAPI.getProfile(userId);}};export var profileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\"+userId);},getStatus:function getStatus(userId){return instance.get(\"profile/status/\"+userId);},updateStatus:function updateStatus(status){return instance.put(\"profile/status\",{status:status});},savePhoto:function savePhoto(photoFile){var formData=new FormData();formData.append('image',photoFile);return instance.put(\"profile/photo\",formData,{headers:{'Content-Type':'multipart/form-data'}});},saveProfile:function saveProfile(profile){return instance.put(\"profile\",profile);}};export var authAPI={authMe:function authMe(){return instance.get(\"auth/me\");},login:function login(email,password){var rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var captcha=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return instance.post(\"auth/login\",{email:email,password:password,rememberMe:rememberMe,captcha:captcha});},logout:function logout(){return instance.delete(\"auth/login\");}};export var securityAPI={getCaptchaUrl:function getCaptchaUrl(){return instance.get(\"security/get-captcha-url\");}};","map":{"version":3,"sources":["C:/it/MyFirstProject/src/API/API.js"],"names":["axios","instance","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","authMe","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAGA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,eAAe,CAAE,IADS,CAE1BC,OAAO,CAAE,CACL,UAAW,sCADN,CAFiB,CAK1BC,OAAO,CAAE,+CALiB,CAAb,CAAjB,CASA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACpBC,QADoB,mBACXC,WADW,CACEC,QADF,CACY,CAC5B,MAAOR,CAAAA,QAAQ,CAACS,GAAT,sBAA2BF,WAA3B,mBAAgDC,QAAhD,GACFE,IADE,CACG,SAAAC,QAAQ,CAAI,CACd,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACH,CAHE,CAAP,CAIH,CANmB,CAOpBC,MAPoB,iBAObC,MAPa,CAOL,CACX,MAAOd,CAAAA,QAAQ,CAACe,IAAT,mBAAyBD,MAAzB,EAAP,CACH,CATmB,CAUpBE,QAVoB,mBAUXF,MAVW,CAUH,CACb,MAAOd,CAAAA,QAAQ,CAACiB,MAAT,mBAA2BH,MAA3B,EAAP,CACH,CAZmB,CAapBI,UAboB,qBAaTJ,MAbS,CAaD,CACfK,OAAO,CAACC,IAAR,CAAa,wCAAb,EAEA,MAAOC,CAAAA,UAAU,CAACH,UAAX,CAAsBJ,MAAtB,CAAP,CAEH,CAlBmB,CAAjB,CAuBP,MAAO,IAAMO,CAAAA,UAAU,CAAG,CACtBH,UADsB,qBACXJ,MADW,CACH,CACf,MAAOd,CAAAA,QAAQ,CAACS,GAAT,CAAa,WAAaK,MAA1B,CAAP,CAEH,CAJqB,CAKtBQ,SALsB,oBAKZR,MALY,CAKJ,CACd,MAAOd,CAAAA,QAAQ,CAACS,GAAT,CAAa,kBAAoBK,MAAjC,CAAP,CAEH,CARqB,CAStBS,YATsB,uBASTC,MATS,CASD,CACjB,MAAOxB,CAAAA,QAAQ,CAACyB,GAAT,kBAA+B,CAACD,MAAM,CAAEA,MAAT,CAA/B,CAAP,CAEH,CAZqB,CAatBE,SAbsB,oBAaZC,SAbY,CAaD,CACjB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,CAAyBH,SAAzB,EAEA,MAAO3B,CAAAA,QAAQ,CAACyB,GAAT,iBAA8BG,QAA9B,CAAwC,CAC3CzB,OAAO,CAAE,CACL,eAAgB,qBADX,CADkC,CAAxC,CAAP,CAKH,CAtBqB,CAuBtB4B,WAvBsB,sBAuBVC,OAvBU,CAuBD,CACjB,MAAOhC,CAAAA,QAAQ,CAACyB,GAAT,WAAwBO,OAAxB,CAAP,CAEH,CA1BqB,CAAnB,CA+BP,MAAO,IAAMC,CAAAA,OAAO,CAAG,CACnBC,MADmB,kBACV,CACL,MAAOlC,CAAAA,QAAQ,CAACS,GAAT,WAAP,CAEH,CAJkB,CAKnB0B,KALmB,gBAKbC,KALa,CAKNC,QALM,CAKwC,IAApCC,CAAAA,UAAoC,2DAAvB,KAAuB,IAAhBC,CAAAA,OAAgB,2DAAN,IAAM,CACvD,MAAOvC,CAAAA,QAAQ,CAACe,IAAT,cAA4B,CAACqB,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,UAAU,CAAVA,UAAlB,CAA8BC,OAAO,CAAPA,OAA9B,CAA5B,CAAP,CAEH,CARkB,CASnBC,MATmB,kBASV,CACL,MAAOxC,CAAAA,QAAQ,CAACiB,MAAT,cAAP,CAEH,CAZkB,CAAhB,CAgBP,MAAO,IAAMwB,CAAAA,WAAW,CAAG,CACvBC,aADuB,yBACP,CACZ,MAAO1C,CAAAA,QAAQ,CAACS,GAAT,4BAAP,CACH,CAHsB,CAApB","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"28a27ba4-71f9-4c48-8005-943f7cabf7a3\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`/follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`/follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method.Please use Profile obj')\r\n\r\n        return profileAPI.getProfile(userId)\r\n\r\n    },\r\n\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha });\r\n\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n\r\n    }\r\n\r\n\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}