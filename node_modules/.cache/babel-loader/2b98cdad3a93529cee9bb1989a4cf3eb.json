{"ast":null,"code":"import _slicedToArray from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Dialogs\\\\Message\\\\Message.jsx\";\nimport React from 'react';\nimport s from './../Dialogs.module.css';\nimport { makeStyles } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n/*const Message = (props) => {\r\n\r\n   return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;*/\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport const Message = () => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([1]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checked = _React$useState2[0],\n        setChecked = _React$useState2[1];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, [0, 1, 2, 3].map(value => {\n    const labelId = \"checkbox-list-secondary-label-\".concat(value);\n    return React.createElement(ListItem, {\n      key: value,\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Avatar n\\xB0\".concat(value + 1),\n      src: \"/static/images/avatar/\".concat(value + 1, \".jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"Line item \".concat(value + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleToggle(value),\n      checked: checked.indexOf(value) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }));\n};","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Dialogs/Message/Message.jsx"],"names":["React","s","makeStyles","List","ListItem","ListItemAvatar","Avatar","Checkbox","ListItemText","ListItemSecondaryAction","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","Message","classes","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","labelId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,yBAAd;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MACS,2CADT;AAGA;;;;;;;;;AAWA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,GAFR;AAGFC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHxC;AAD6B,CAAL,CAAN,CAA5B;AAQA,OAAO,MAAMC,OAAO,GAAE,MAAK;AACvB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AADuB,0BAEOV,KAAK,CAACqB,QAAN,CAAe,CAAC,CAAD,CAAf,CAFP;AAAA;AAAA,QAEhBC,OAFgB;AAAA,QAEPC,UAFO;;AAIvB,QAAMC,YAAY,GAAGC,KAAK,IAAI,MAAM;AAChC,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACH,KAFD,MAEO;AACHG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACH,GAXD;;AAaA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAER,OAAO,CAACR,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAamB,GAAb,CAAiBN,KAAK,IAAI;AACvB,UAAMO,OAAO,2CAAoCP,KAApC,CAAb;AACA,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,GAAG,wBAAcA,KAAK,GAAG,CAAtB,CADP;AAEI,MAAA,GAAG,kCAA2BA,KAAK,GAAG,CAAnC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAOI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEO,OAAlB;AAA2B,MAAA,OAAO,sBAAeP,KAAK,GAAG,CAAvB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,KADT;AAEI,MAAA,QAAQ,EAAED,YAAY,CAACC,KAAD,CAF1B;AAGI,MAAA,OAAO,EAAEH,OAAO,CAACK,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAHzC;AAII,MAAA,UAAU,EAAE;AAAE,2BAAmBO;AAArB,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ;AAmBH,GArBA,CADL,CADJ;AA0BH,CA3CM","sourcesContent":["import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction\r\n    from \"@material-ui/core/ListItemSecondaryAction\";\r\n\r\n/*const Message = (props) => {\r\n\r\n   return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;*/\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport const Message =()=> {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([1]);\r\n\r\n    const handleToggle = value => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <List dense className={classes.root}>\r\n            {[0, 1, 2, 3].map(value => {\r\n                const labelId = `checkbox-list-secondary-label-${value}`;\r\n                return (\r\n                    <ListItem key={value} button>\r\n                        <ListItemAvatar>\r\n                            <Avatar\r\n                                alt={`Avatar nÂ°${value + 1}`}\r\n                                src={`/static/images/avatar/${value + 1}.jpg`}\r\n                            />\r\n                        </ListItemAvatar>\r\n                        <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n                        <ListItemSecondaryAction>\r\n                            <Checkbox\r\n                                edge=\"end\"\r\n                                onChange={handleToggle(value)}\r\n                                checked={checked.indexOf(value) !== -1}\r\n                                inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}