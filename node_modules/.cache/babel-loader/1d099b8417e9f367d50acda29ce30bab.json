{"ast":null,"code":"var _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/ProfileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","withRouter","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorizedUserId","history","push","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,YAAnC,QAAsD,4BAAtD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAOC,gBAAP,SAAgCT,KAAK,CAACU,SAAtC,CAAiD;AAC7CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAG,CAACA,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAG,CAACJ,MAAJ,EAAW;AACP,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AAEH;AACJ;;AACD,SAAKL,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B;AACA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AAEH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,WACQ,oBAAC,OAAD,oBAAa,KAAKN,KAAlB;AACS,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWO,OAD9B;AAES,MAAA,MAAM,EAAI,KAAKP,KAAL,CAAWQ,MAF9B;AAGS,MAAA,YAAY,EAAI,KAAKR,KAAL,CAAWR,YAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;AAOH;;AAvB4C;;AA2BjD,IAAIiB,eAAe,GAAIC,KAAD,KAAW;AAC7BH,EAAAA,OAAO,EAACG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE7BC,EAAAA,MAAM,EAACE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG7BL,EAAAA,gBAAgB,EAACO,KAAK,CAACE,IAAN,CAAWb,MAHC;AAI7Bc,EAAAA,MAAM,EAACH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAX,CAAtB;;AAQA,eAAelB,OAAO,CAClBN,OAAO,CAAEoB,eAAF,EAAmB;AAAClB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BE,EAAAA;AAA5B,CAAnB,CADW,EAElBC,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/ProfileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass  ProfileContainer extends React.Component  {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId ;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <Profile {...this.props}\r\n                         profile ={this.props.profile}\r\n                         status = {this.props.status}\r\n                         updateStatus = {this.props.updateStatus}\r\n                />\r\n                )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state)=> ({\r\n    profile:state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}