{"ast":null,"code":"var _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\HOC\\\\withAuthRedirect.jsx\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Compomemt => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n      return React.createElement(Compomemt, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["C:\\it\\MyFirstProject\\src\\HOC\\withAuthRedirect.jsx"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Compomemt","RedirectComponent","Component","render","props","ConnectedAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAW;AACxCC,EAAAA,MAAM,EAACD,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAX,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCT,KAAK,CAACU,SAAtC,CAAgD;AAC5CC,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWP,MAAhB,EAAwB,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,aAAO,oBAAC,SAAD,oBAAe,KAAKO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAGH;;AAN2C;;AAUhD,MAAIC,8BAA8B,GAAGX,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAArC;AAEA,SAAOI,8BAAP;AACH,CAdM","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Compomemt) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Compomemt {...this.props}/>\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"]},"metadata":{},"sourceType":"module"}