{"ast":null,"code":"import _slicedToArray from\"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import styles from'./Paginator.module.css';var Paginator=function Paginator(_ref){var totalUserCount=_ref.totalUserCount,pageSize=_ref.pageSize,currentPage=_ref.currentPage,onPageChanged=_ref.onPageChanged,_ref$portionSize=_ref.portionSize,portionSize=_ref$portionSize===void 0?10:_ref$portionSize;var pagesCount=Math.ceil(totalUserCount/pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){pages.push(i);}var portionCount=Math.ceil(pagesCount/portionSize);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionNumber=(portionNumber-1)*portionSize+1;var rightPortionPageNumber=portionNumber*portionSize;return React.createElement(\"div\",null,portionNumber>1&&React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber-1);}},\"Prev\"),pages.filter(function(p){return p>=leftPortionNumber&&p<=rightPortionPageNumber;}).map(function(p){return React.createElement(\"span\",{className:currentPage===p&&styles.selectedPage,onClick:function onClick(e){onPageChanged(p);}},\" \",p,\" \");}),portionCount>portionNumber&&React.createElement(\"button\",{onClick:function onClick(){setPortionNumber(portionNumber+1);}},\"Next\"));};/*let Paginator = ({totalUserCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {pages\r\n                .map(p => {\r\n                    return <span\r\n                        className={currentPage === p && styles.selectedPage}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p)\r\n                        }}> {p} </span>\r\n                })}\r\n        </div>\r\n    )\r\n}*/export default Paginator;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","Paginator","totalUserCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionPageNumber","filter","p","map","selectedPage","e"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA8E,IAA5EC,CAAAA,cAA4E,MAA5EA,cAA4E,CAA5DC,QAA4D,MAA5DA,QAA4D,CAAlDC,WAAkD,MAAlDA,WAAkD,CAArCC,aAAqC,MAArCA,aAAqC,uBAAtBC,WAAsB,CAAtBA,WAAsB,2BAAR,EAAQ,kBAC1F,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUP,cAAc,CAAGC,QAA3B,CAAjB,CACA,GAAIO,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIJ,UAArB,CAAiCI,CAAC,EAAlC,CAAsC,CAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CACF,GAAIE,CAAAA,YAAY,CAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,CAAGD,WAAvB,CAAnB,CAN2F,cAOlDP,QAAQ,CAAC,CAAD,CAP0C,wCAOrFe,aAPqF,eAOtEC,gBAPsE,eAQ1F,GAAIC,CAAAA,iBAAiB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBR,WAAtB,CAAoC,CAA5D,CACA,GAAIW,CAAAA,sBAAsB,CAAGH,aAAa,CAAGR,WAA7C,CAGA,MACI,gCACKQ,aAAa,CAAG,CAAhB,EACD,8BAAQ,OAAO,CAAE,kBAAM,CACnBC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CACH,CAFD,SAFJ,CAKKJ,KAAK,CACDQ,MADJ,CACW,SAAAC,CAAC,QAAIA,CAAAA,CAAC,EAAIH,iBAAL,EAA0BG,CAAC,EAAIF,sBAAnC,EADZ,EAEIG,GAFJ,CAEQ,SAAAD,CAAC,CAAI,CACN,MAAO,6BACH,SAAS,CAAEf,WAAW,GAAKe,CAAhB,EAAqBnB,MAAM,CAACqB,YADpC,CAEH,OAAO,CAAE,iBAACC,CAAD,CAAO,CACZjB,aAAa,CAACc,CAAD,CAAb,CACH,CAJE,MAIEA,CAJF,KAAP,CAKH,CARJ,CALL,CAcKN,YAAY,CAAGC,aAAf,EACD,8BAAQ,OAAO,CAAE,kBAAM,CACnBC,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CACH,CAFD,SAfJ,CADJ,CAsBH,CAlCD,CAmCA;;;;;;;;;;;;;;;;;;;;GAsBA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalUserCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n   let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span\r\n                        className={currentPage === p && styles.selectedPage}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p)\r\n                        }}> {p} </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\n/*let Paginator = ({totalUserCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {pages\r\n                .map(p => {\r\n                    return <span\r\n                        className={currentPage === p && styles.selectedPage}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p)\r\n                        }}> {p} </span>\r\n                })}\r\n        </div>\r\n    )\r\n}*/\r\n\r\nexport default Paginator;\r\n\r\n"]},"metadata":{},"sourceType":"module"}