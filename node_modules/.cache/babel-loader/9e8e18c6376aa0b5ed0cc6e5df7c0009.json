{"ast":null,"code":"import _slicedToArray from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.jsx\";\nimport React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\nimport usersPhoto from \"../../Users/Photo/usersPhoto.png\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto\n}) => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  if (!profile) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  const myPhotoSelected = e => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.descriptionBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: profile.photos.large || usersPhoto,\n    className: s.myPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), isOwner && React.createElement(\"input\", {\n    type: 'file',\n    onChange: myPhotoSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), editMode ? React.createElement(ProfileDataForm, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(ProfileData, {\n    profile: profile,\n    isOwner: isOwner,\n    toEditMode: () => {\n      setEditMode(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(ProfileStatusHooks, {\n    status: status,\n    updateStatus: updateStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nconst ProfileData = ({\n  profile,\n  isOwner,\n  toEditMode\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, isOwner && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"edit\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Full Name\"), \": \", profile.fullName), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Looking for a job\"), \": \", profile.lookingForAJob ? 'yes' : 'no'), profile.lookingForAJob && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"My skills\"), \": \", profile.lookingForAJobDescription), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"About me\"), \": \", profile.aboutMe), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Contacts\"), \": \", Object.keys(profile.contacts).map(key => {\n    return React.createElement(Contact, {\n      key: key,\n      contactTitle: key,\n      contactValue: profile.contacts[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  })));\n};\n\nconst Contact = ({\n  contactTitle,\n  contactValue\n}) => {\n  return React.createElement(\"div\", {\n    className: s.contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, contactTitle), \":\", contactValue);\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useState","s","Preloader","ProfileStatusHooks","usersPhoto","ProfileInfo","profile","status","updateStatus","isOwner","savePhoto","editMode","setEditMode","myPhotoSelected","e","target","files","length","descriptionBlock","photos","large","myPhoto","ProfileData","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","contact"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport usersPhoto from \"../../Users/Photo/usersPhoto.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const myPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || usersPhoto}\r\n                     className={s.myPhoto}/>\r\n                    {isOwner && <input type={'file'} onChange={myPhotoSelected}/>}\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={profile}/>\r\n                        : <ProfileData\r\n                            profile={profile}\r\n                            isOwner={isOwner}\r\n                            toEditMode={() => {setEditMode(true)}}\r\n                        />}\r\n                <ProfileStatusHooks status={status}\r\n                                    updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={toEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full Name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My skills</b>: {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact\r\n                    key={key}\r\n                    contactTitle={key}\r\n                    contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n\r\n   }\r\n\r\n\r\n const Contact = ({contactTitle, contactValue}) => {\r\n            return<div className ={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\r\n        }\r\n\r\n  export default ProfileInfo;"]},"metadata":{},"sourceType":"module"}