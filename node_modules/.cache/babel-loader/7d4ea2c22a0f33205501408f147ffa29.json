{"ast":null,"code":"var _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, setUserProfile } from \"../../redux/ProfileReducer\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { usersAPI } from \"../../API/API\";\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userID = this.props.match.params.userID;\n\n    if (!userID) {\n      userID = 2;\n    }\n\n    this.props.getUserProfile(userID);\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\ncompose(withAuthRedirect)(ProfileContainer);\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile\n});\n\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(WithUrlDataContainerComponent);","map":{"version":3,"sources":["C:\\it\\MyFirstProject\\src\\components\\Profile\\ProfileContainer.jsx"],"names":["React","Profile","axios","connect","getUserProfile","setUserProfile","Redirect","withRouter","usersAPI","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userID","props","match","params","render","profile","AuthRedirectComponent","mapStateToProps","state","profilePage","WithUrlDataContainerComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,4BAA7C;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,kBAAnC;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAOC,gBAAP,SAAgCX,KAAK,CAACY,SAAtC,CAAiD;AAC7CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAG,CAACA,MAAJ,EAAW;AACPA,MAAAA,MAAM,GAAI,CAAV;AACH;;AACD,SAAKC,KAAL,CAAWX,cAAX,CAA0BU,MAA1B;AAEH;;AAEDI,EAAAA,MAAM,GAAE;AAEJ,WACQ,oBAAC,OAAD,oBAAa,KAAKH,KAAlB;AAAyB,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWI,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR;AAGH;;AAf4C;;AAmBjDT,OAAO,CAEHD,gBAFG,CAAP,CAGEE,gBAHF;AAMA,IAAIS,qBAAqB,GAAGX,gBAAgB,CAACE,gBAAD,CAA5C;;AAIA,IAAIU,eAAe,GAAIC,KAAD,KAAW;AAACH,EAAAA,OAAO,EAACG,KAAK,CAACC,WAAN,CAAkBJ;AAA3B,CAAX,CAAtB;;AAMA,IAAIK,6BAA6B,GAAGjB,UAAU,CAACa,qBAAD,CAA9C;AAGA,eAAejB,OAAO,CAAEkB,eAAF,EAAmB;AAACjB,EAAAA;AAAD,CAAnB,CAAP,CAA4CoB,6BAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, setUserProfile} from \"../../redux/ProfileReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../API/API\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass  ProfileContainer extends React.Component  {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n        if(!userID){\r\n            userID =  2;\r\n        }\r\n        this.props.getUserProfile(userID)\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n                <Profile {...this.props} profile ={this.props.profile}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\ncompose(\r\n\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=> ({profile:state.profilePage.profile\r\n\r\n})\r\n\r\n\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n\r\nexport default connect (mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);"]},"metadata":{},"sourceType":"module"}