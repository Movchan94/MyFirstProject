{"ast":null,"code":"import _defineProperty from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { profileAPI, usersAPI } from \"../API/API\";\nimport { stopSubmit } from \"redux-form\";\nconst ADD_POST = 'ADD_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCSESS = 'SAVE_PHOTO_SUCSESS';\nlet initialState = {\n  posts: [{\n    id: 'user_1',\n    message: 'Hello world!',\n    likesCount: '17'\n  }, {\n    id: 'user_2',\n    message: 'Hi all!',\n    likesCount: '33'\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 'user_5',\n        message: action.NewPostBody,\n        likesCount: 0\n      };\n      return _objectSpread({}, state, {\n        posts: [...state.posts, newPost]\n      });\n\n    case SET_USER_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.profile\n      });\n\n    case SET_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(p => p.id != action.postId)\n      });\n\n    case SAVE_PHOTO_SUCSESS:\n      return _objectSpread({}, state, {\n        profile: _objectSpread({}, state.profile, {\n          photos: action.photos\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = NewPostBody => ({\n  type: ADD_POST,\n  NewPostBody\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoAC = photos => ({\n  type: SAVE_PHOTO_SUCSESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoAC(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit('edit-profile', {\n      'contacts': {\n        'facebook': response.data.messages[0]\n      }\n    }));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/redux/ProfileReducer.js"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCSESS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","NewPostBody","filter","p","postId","photos","addPostActionCreator","setUserProfile","setStatus","deletePost","savePhotoAC","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","messages"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,YAAnC;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAGA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,QAAL;AAAeC,IAAAA,OAAO,EAAE,cAAxB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GADG,EAEH;AAACF,IAAAA,EAAE,EAAE,QAAL;AAAeC,IAAAA,OAAO,EAAE,SAAxB;AAAmCC,IAAAA,UAAU,EAAE;AAA/C,GAFG,CADQ;AAKfC,EAAAA,OAAO,EAAE,IALM;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAnB;;AASA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,QAAL;AACI,UAAIgB,OAAO,GAAG;AACVT,QAAAA,EAAE,EAAE,QADM;AAEVC,QAAAA,OAAO,EAAEM,MAAM,CAACG,WAFN;AAGVR,QAAAA,UAAU,EAAE;AAHF,OAAd;AAKA,+BACOI,KADP;AAEIP,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBU,OAAjB;AAFX;;AAIJ,SAAKf,gBAAL;AACI,+BACOY,KADP;AACcH,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAD9B;;AAIJ,SAAKR,UAAL;AACI,+BACOW,KADP;AACcF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAD7B;;AAIJ,SAAKR,WAAL;AACI,+BACOU,KADP;AAEIP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYY,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,IAAQO,MAAM,CAACM,MAAvC;AAFX;;AAKJ,SAAKhB,kBAAL;AACI,+BAAWS,KAAX;AAAkBH,QAAAA,OAAO,oBAAKG,KAAK,CAACH,OAAX;AAAoBW,UAAAA,MAAM,EAACP,MAAM,CAACO;AAAlC;AAAzB;;AACJ;AACI,aAAOR,KAAP;AA9BR;AAiCH,CAnCD;;AAoCA,OAAO,MAAMS,oBAAoB,GAAIL,WAAD,KAAkB;AAClDF,EAAAA,IAAI,EAAEf,QAD4C;AAClCiB,EAAAA;AADkC,CAAlB,CAA7B;AAGP,OAAO,MAAMM,cAAc,GAAIb,OAAD,KAAc;AACxCK,EAAAA,IAAI,EAAEd,gBADkC;AAChBS,EAAAA;AADgB,CAAd,CAAvB;AAGP,OAAO,MAAMc,SAAS,GAAIb,MAAD,KAAa;AAClCI,EAAAA,IAAI,EAAEb,UAD4B;AAChBS,EAAAA;AADgB,CAAb,CAAlB;AAGP,OAAO,MAAMc,UAAU,GAAIL,MAAD,KAAa;AACnCL,EAAAA,IAAI,EAAEZ,WAD6B;AAChBiB,EAAAA;AADgB,CAAb,CAAnB;AAGP,OAAO,MAAMM,WAAW,GAAIL,MAAD,KAAa;AACpCN,EAAAA,IAAI,EAAEX,kBAD8B;AACViB,EAAAA;AADU,CAAb,CAApB;AAIP,OAAO,MAAMM,cAAc,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAMhC,QAAQ,CAACiC,UAAT,CAAoBH,MAApB,CAAvB;AACAC,EAAAA,QAAQ,CAACN,cAAc,CAACO,QAAQ,CAACE,IAAV,CAAf,CAAR;AACH,CAHM;AAKP,OAAO,MAAMC,SAAS,GAAIL,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAMjC,UAAU,CAACoC,SAAX,CAAqBL,MAArB,CAAvB;AACAC,EAAAA,QAAQ,CAACL,SAAS,CAACM,QAAQ,CAACE,IAAV,CAAV,CAAR;AACH,CAHM;AAKP,OAAO,MAAME,YAAY,GAAIvB,MAAD,IAAY,MAAOkB,QAAP,IAAoB;AACxD,QAAMC,QAAQ,GAAG,MAAMjC,UAAU,CAACqC,YAAX,CAAwBvB,MAAxB,CAAvB;;AACA,MAAImB,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,IAAAA,QAAQ,CAACL,SAAS,CAACb,MAAD,CAAV,CAAR;AACH;AACJ,CALM;AAMP,OAAO,MAAMyB,SAAS,GAAIC,IAAD,IAAU,MAAOR,QAAP,IAAoB;AACnD,QAAMC,QAAQ,GAAG,MAAMjC,UAAU,CAACuC,SAAX,CAAqBC,IAArB,CAAvB;;AACA,MAAIP,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,IAAAA,QAAQ,CAACH,WAAW,CAACI,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBX,MAApB,CAAZ,CAAR;AACH;AACJ,CALM;AAMP,OAAO,MAAMiB,WAAW,GAAI5B,OAAD,IAAa,OAAOmB,QAAP,EAAiBU,QAAjB,KAA8B;AAClE,QAAMX,MAAM,GAAGW,QAAQ,GAAGC,IAAX,CAAgBZ,MAA/B;AACA,QAAME,QAAQ,GAAG,MAAMjC,UAAU,CAACyC,WAAX,CAAuB5B,OAAvB,CAAvB;;AACA,MAAIoB,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,IAAAA,QAAQ,CAACF,cAAc,CAACC,MAAD,CAAf,CAAR;AACH,GAFD,MAEM;AACFC,IAAAA,QAAQ,CAAC9B,UAAU,CAAC,cAAD,EAAiB;AAAC,kBAAW;AAAC,oBACzC+B,QAAQ,CAACE,IAAT,CAAcS,QAAd,CAAuB,CAAvB;AADwC;AAAZ,KAAjB,CAAX,CAAR;AAEH;AACJ,CATM;AAUP,eAAe7B,cAAf","sourcesContent":["import {profileAPI, usersAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCSESS = 'SAVE_PHOTO_SUCSESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 'user_1', message: 'Hello world!', likesCount: '17'},\r\n        {id: 'user_2', message: 'Hi all!', likesCount: '33'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 'user_5',\r\n                message: action.NewPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n\r\n            };\r\n        case SAVE_PHOTO_SUCSESS:\r\n            return {...state, profile:{...state.profile, photos:action.photos}};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPostActionCreator = (NewPostBody) => ({\r\n    type: ADD_POST, NewPostBody\r\n})\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE, profile\r\n})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS, status\r\n})\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST, postId\r\n})\r\nexport const savePhotoAC = (photos) => ({\r\n    type: SAVE_PHOTO_SUCSESS, photos\r\n})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoAC(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }else {\r\n        dispatch(stopSubmit('edit-profile', {'contacts':{'facebook':\r\n                response.data.messages[0]}}))\r\n    }\r\n}\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}