{"ast":null,"code":"import _defineProperty from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { authAPI } from \"../API/API\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, {}, action.data, {\n        isAuth: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.authMe().then(response => {\n    if (response.data.resultCode === 0) {\n      let _response$data$data = response.data.data,\n          id = _response$data$data.id,\n          email = _response$data$data.email,\n          login = _response$data$data.login;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport default AuthReducer;","map":{"version":3,"sources":["C:\\it\\MyFirstProject\\src\\redux\\AuthReducer.js"],"names":["authAPI","SET_USER_DATA","initialState","id","email","login","isAuth","AuthReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","authMe","then","response","resultCode"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,+BACOO,KADP,MAEOC,MAAM,CAACE,IAFd;AAGIL,QAAAA,MAAM,EAAC;AAHX;;AAMJ;AACI,aAAOE,KAAP;AATR;AAWH,CAbD;;AAgBA,OAAO,MAAMI,eAAe,GAAG,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,MAAuB;AAClDK,EAAAA,IAAI,EAAET,aAD4C;AAC7BU,EAAAA,IAAI,EAAE;AAACR,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA;AAAZ;AADuB,CAAvB,CAAxB;AAGP,OAAO,MAAMQ,eAAe,GAAG,MAAOC,QAAD,IAAa;AAC9Cd,EAAAA,OAAO,CAACe,MAAR,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAhC,EAAkC;AAAA,gCACLD,QAAQ,CAACN,IAAT,CAAcA,IADT;AAAA,UACzBR,EADyB,uBACzBA,EADyB;AAAA,UACrBC,KADqB,uBACrBA,KADqB;AAAA,UACdC,KADc,uBACdA,KADc;AAE/BS,MAAAA,QAAQ,CAACF,eAAe,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AAEF;AACJ,GAPL;AAQH,CATM;AAaP,eAAeE,WAAf","sourcesContent":["import {authAPI} from \"../API/API\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth:true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (id, email, login) => ({\r\n    type: SET_USER_DATA, data: {id, email, login}\r\n})\r\nexport const getAuthUserData = () => (dispatch)=> {\r\n    authAPI.authMe()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0){\r\n                let {id, email, login} = response.data.data;\r\n               dispatch(setAuthUserData(id, email, login))\r\n\r\n            }\r\n        });\r\n}\r\n\r\n\r\n\r\nexport default AuthReducer;\r\n"]},"metadata":{},"sourceType":"module"}