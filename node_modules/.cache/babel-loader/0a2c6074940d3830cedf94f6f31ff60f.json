{"ast":null,"code":"import _defineProperty from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { usersAPI } from \"../API/API\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUserCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        users: updateObjectInArray()\n        /* ...state,\r\n         users: state.users.map(u => {\r\n             if (u.id === action.userId) {\r\n                 return {...u, followed: true}\r\n             }\r\n             return u;\r\n         })*/\n\n      };\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: false\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: [...action.users]\n      });\n\n    case SET_CURRENT_PAGE:\n      return _objectSpread({}, state, {\n        currentPage: action.currentPage\n      });\n\n    case SET_TOTAL_USERS_COUNT:\n      return _objectSpread({}, state, {\n        totalUserCount: action.count\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return _objectSpread({}, state, {\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n\n  if (response.data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/redux/UsersReducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","updateObjectInArray","map","u","id","userId","followed","count","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","response","resultCode","follow","bind","unfollow"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                users: updateObjectInArray()\r\n               /* ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })*/\r\n\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUserCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW, userId\r\n})\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW, userId\r\n})\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n})\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT, count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\r\n})\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n"]},"metadata":{},"sourceType":"module"}