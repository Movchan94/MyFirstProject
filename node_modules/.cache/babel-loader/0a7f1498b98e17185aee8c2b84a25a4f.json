{"ast":null,"code":"import _slicedToArray from\"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import s from'./ProfileInfo.module.css';import Preloader from\"../../common/Preloader/Preloader\";import ProfileStatusHooks from\"./ProfileStatusHooks\";import usersPhoto from\"../../Users/Photo/usersPhoto.png\";import ProfileDataForm from\"./ProfileDataForm\";var ProfileInfo=function ProfileInfo(_ref){var profile=_ref.profile,status=_ref.status,updateStatus=_ref.updateStatus,isOwner=_ref.isOwner,savePhoto=_ref.savePhoto,saveProfile=_ref.saveProfile;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];if(!profile){return React.createElement(Preloader,null);}var myPhotoSelected=function myPhotoSelected(e){if(e.target.files.length){savePhoto(e.target.files[0]);}};var onSubmit=function onSubmit(formData){saveProfile(formData).then(function(){setEditMode(false);});};return React.createElement(\"div\",null,React.createElement(\"div\",{className:s.descriptionBlock},React.createElement(\"img\",{src:profile.photos.large||usersPhoto,className:s.myPhoto}),isOwner&&React.createElement(\"input\",{type:'file',onChange:myPhotoSelected}),editMode?React.createElement(ProfileDataForm,{profile:profile,onSubmit:onSubmit,initialValues:profile}):React.createElement(ProfileData,{profile:profile,isOwner:isOwner,toEditMode:function toEditMode(){setEditMode(true);}}),React.createElement(ProfileStatusHooks,{status:status,updateStatus:updateStatus})));};var ProfileData=function ProfileData(_ref2){var profile=_ref2.profile,isOwner=_ref2.isOwner,toEditMode=_ref2.toEditMode;return React.createElement(\"div\",null,isOwner&&React.createElement(\"div\",null,React.createElement(\"button\",{onClick:toEditMode},\"edit\")),React.createElement(\"div\",null,React.createElement(\"b\",null,\"Full Name\"),\": \",profile.fullName),React.createElement(\"div\",null,React.createElement(\"b\",null,\"Looking for a job\"),\": \",profile.lookingForAJob?'yes':'no'),profile.lookingForAJob&&React.createElement(\"div\",null,React.createElement(\"b\",null,\"My skills\"),\": \",profile.lookingForAJobDescription),React.createElement(\"div\",null,React.createElement(\"b\",null,\"About me\"),\": \",profile.aboutMe),React.createElement(\"div\",null,React.createElement(\"b\",null,\"Contacts\"),\": \",Object.keys(profile.contacts).map(function(key){return React.createElement(Contact,{key:key,contactTitle:key,contactValue:profile.contacts[key]});})));};var Contact=function Contact(_ref3){var contactTitle=_ref3.contactTitle,contactValue=_ref3.contactValue;return React.createElement(\"div\",{className:s.contact},React.createElement(\"b\",null,contactTitle),\":\",contactValue);};export default ProfileInfo;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useState","s","Preloader","ProfileStatusHooks","usersPhoto","ProfileDataForm","ProfileInfo","profile","status","updateStatus","isOwner","savePhoto","saveProfile","editMode","setEditMode","myPhotoSelected","e","target","files","length","onSubmit","formData","then","descriptionBlock","photos","large","myPhoto","ProfileData","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","contact"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport usersPhoto from \"../../Users/Photo/usersPhoto.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const myPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || usersPhoto}\r\n                     className={s.myPhoto}/>\r\n                {isOwner &&\r\n                <input type={'file'} onChange={myPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        profile={profile}\r\n                        onSubmit={onSubmit}\r\n                        initialValues={profile}\r\n                    />\r\n                    : <ProfileData\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                        toEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}\r\n                    />}\r\n                <ProfileStatusHooks status={status}\r\n                                    updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={toEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full Name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a\r\n                job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact\r\n                key={key}\r\n                contactTitle={key}\r\n                contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}