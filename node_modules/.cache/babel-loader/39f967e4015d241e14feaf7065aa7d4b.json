{"ast":null,"code":"import _defineProperty from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { authAPI } from \"../API/API\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, {}, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  return authAPI.authMe().then(response => {\n    if (response.data.resultCode === 0) {\n      let _response$data$data = response.data.data,\n          id = _response$data$data.id,\n          email = _response$data$data.email,\n          login = _response$data$data.login;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  });\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n      dispatch(stopSubmit('login', {\n        _error: message\n      }));\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData(null, null, null, false));\n    }\n  });\n};\nexport default AuthReducer;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/redux/AuthReducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","userId","email","login","isAuth","AuthReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","authMe","then","response","data","resultCode","id","password","rememberMe","message","messages","length","_error","logout"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,+BACOO,KADP,MAEOC,MAAM,CAACE,OAFd;;AAKJ;AACI,aAAOH,KAAP;AARR;AAUH,CAZD;;AAeA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AAC9DI,EAAAA,IAAI,EAAET,aADwD;AACzCU,EAAAA,OAAO,EAAE;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AADgC,CAAnC,CAAxB;AAGP,OAAO,MAAMO,eAAe,GAAG,MAAOC,QAAD,IAAa;AAC9C,SAAOf,OAAO,CAACgB,MAAR,GACFC,IADE,CACGC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAhC,EAAkC;AAAA,gCACLF,QAAQ,CAACC,IAAT,CAAcA,IADT;AAAA,UACzBE,EADyB,uBACzBA,EADyB;AAAA,UACrBhB,KADqB,uBACrBA,KADqB;AAAA,UACdC,KADc,uBACdA,KADc;AAE/BS,MAAAA,QAAQ,CAACF,eAAe,CAACQ,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AAEF;AACJ,GAPE,CAAP;AAQH,CATM;AAUP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,KAAkCR,QAAD,IAAa;AAE/Df,EAAAA,OAAO,CAACM,KAAR,CAAcD,KAAd,EAAqBiB,QAArB,EAA+BC,UAA/B,EACKN,IADL,CACUC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAhC,EAAkC;AAC9BL,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH,KAFD,MAEM;AACF,UAAIU,OAAO,GAAGN,QAAQ,CAACC,IAAT,CAAcM,QAAd,CAAuBC,MAAvB,GAAgC,CAAhC,GAAoCR,QAAQ,CAACC,IAAT,CAAcM,QAAd,CAAuB,CAAvB,CAApC,GAAgE,YAA9E;AACAV,MAAAA,QAAQ,CAACd,UAAU,CAAC,OAAD,EAAS;AAAC0B,QAAAA,MAAM,EAACH;AAAR,OAAT,CAAX,CAAR;AACH;AACJ,GARL;AASH,CAXM;AAYP,OAAO,MAAMI,MAAM,GAAG,MAAOb,QAAD,IAAa;AACrCf,EAAAA,OAAO,CAAC4B,MAAR,GACKX,IADL,CACUC,QAAQ,IAAI;AACd,QAAGA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAhC,EAAkC;AAC9BL,MAAAA,QAAQ,CAACD,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAhB,CAAR;AACH;AACJ,GALL;AAMH,CAPM;AAUP,eAAeN,WAAf","sourcesContent":["import {authAPI} from \"../API/API\";\r\nimport {stopSubmit} from \"redux-form\"\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {userId, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => (dispatch)=> {\r\n    return authAPI.authMe()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0){\r\n                let {id, email, login} = response.data.data;\r\n               dispatch(setAuthUserData(id, email, login, true))\r\n\r\n            }\r\n        });\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch)=> {\r\n\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if(response.data.resultCode === 0){\r\n                dispatch(getAuthUserData())\r\n            }else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit('login',{_error:message} ))\r\n            }\r\n        });\r\n}\r\nexport const logout = () => (dispatch)=> {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if(response.data.resultCode === 0){\r\n                dispatch(getAuthUserData(null, null, null, false))\r\n            }\r\n        });\r\n}\r\n\r\n\r\nexport default AuthReducer;\r\n"]},"metadata":{},"sourceType":"module"}