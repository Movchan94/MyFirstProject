{"ast":null,"code":"import { createSelector } from 'reselect';\nexport const getUsers = state => {\n  return state.usersPage.users;\n};\nexport const getUsersSelector = state => {\n  return getUsers(state).filter(u => true);\n};\nexport const getUsersSuperSelector = createSelector(getUsers, (users, isFetching) => {\n  return users.filter(u => true);\n});\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUserCount = state => {\n  return state.usersPage.totalUserCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};","map":{"version":3,"sources":["C:/it/MyFirstProject/src/redux/UsersSelectors.js"],"names":["createSelector","getUsers","state","usersPage","users","getUsersSelector","filter","u","getUsersSuperSelector","isFetching","getPageSize","pageSize","getTotalUserCount","totalUserCount","getCurrentPage","currentPage","getIsFetching","getFollowingInProgress","followingInProgress"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACH,CAFM;AAGP,OAAO,MAAMC,gBAAgB,GAAIH,KAAD,IAAW;AACvC,SAAOD,QAAQ,CAACC,KAAD,CAAR,CAAgBI,MAAhB,CAAuBC,CAAC,IAAI,IAA5B,CAAP;AACH,CAFM;AAGP,OAAO,MAAMC,qBAAqB,GAAGR,cAAc,CAACC,QAAD,EAAW,CAACG,KAAD,EAAQK,UAAR,KAAuB;AACjF,SAAOL,KAAK,CAACE,MAAN,CAAaC,CAAC,IAAI,IAAlB,CAAP;AACH,CAFkD,CAA5C;AAIP,OAAO,MAAMG,WAAW,GAAIR,KAAD,IAAW;AAClC,SAAOA,KAAK,CAACC,SAAN,CAAgBQ,QAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,iBAAiB,GAAIV,KAAD,IAAW;AACxC,SAAOA,KAAK,CAACC,SAAN,CAAgBU,cAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAIZ,KAAD,IAAW;AACrC,SAAOA,KAAK,CAACC,SAAN,CAAgBY,WAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAId,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACC,SAAN,CAAgBM,UAAvB;AACH,CAFM;AAIP,OAAO,MAAMQ,sBAAsB,GAAIf,KAAD,IAAW;AAC7C,SAAOA,KAAK,CAACC,SAAN,CAAgBe,mBAAvB;AACH,CAFM","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsersSelector = (state) => {\r\n    return getUsers(state).filter(u => true)\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users, isFetching) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUserCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}