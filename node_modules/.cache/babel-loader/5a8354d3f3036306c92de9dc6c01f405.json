{"ast":null,"code":"import _slicedToArray from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React, { useState } from 'react';\nimport styles from './Paginator.module.css';\n\nlet Paginator = ({\n  totalItemCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return React.createElement(\"div\", {\n    className: styles.paginator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, portionNumber > 1 && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Prev\"), pages.filter(p => p >= leftPortionNumber && p <= rightPortionPageNumber).map(p => {\n    return React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }),\n      className: currentPage === p && styles.selectedPage,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" \", p, \" \");\n  }), portionCount > portionNumber && React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Next\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","Paginator","totalItemCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionPageNumber","paginator","filter","p","map","cn","selectedPage","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,WAA3B;AAAwCC,EAAAA,aAAxC;AAAuDC,EAAAA,WAAW,GAAG;AAArE,CAAD,KAA8E;AAC1F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,cAAc,GAAGC,QAA3B,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;;AAN0F,kBAOlDP,QAAQ,CAAC,CAAD,CAP0C;AAAA;AAAA,MAOrFe,aAPqF;AAAA,MAOtEC,gBAPsE;;AAQ1F,MAAIC,iBAAiB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAA5D;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,SACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,aAAa,GAAG,CAAhB,IACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKKJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIJ,iBAAL,IAA0BI,CAAC,IAAIH,sBAD/C,EAEII,GAFJ,CAESD,CAAD,IAAO;AACR,WAAO;AAAM,MAAA,SAAS,EAAIE,EAAE,CAAC;AACzB,SAACtB,MAAM,CAACuB,YAAR,GAAsBnB,WAAW,KAAKgB;AADb,OAAD,CAArB;AAEH,MAAA,SAAS,EAAEhB,WAAW,KAAKgB,CAAhB,IAAqBpB,MAAM,CAACuB,YAFpC;AAGH,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZnB,QAAAA,aAAa,CAACe,CAAD,CAAb;AACH,OALE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKEA,CALF,MAAP;AAMH,GATJ,CALL,EAeKP,YAAY,GAAGC,aAAf,IACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,CADJ;AAuBH,CAnCD;;AAqCA,eAAeb,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\n\r\nlet Paginator = ({totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className = {cn({\r\n                        [styles.selectedPage]:currentPage === p})}\r\n                        className={currentPage === p && styles.selectedPage}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p)\r\n                        }}> {p} </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next</button>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n\r\n"]},"metadata":{},"sourceType":"module"}