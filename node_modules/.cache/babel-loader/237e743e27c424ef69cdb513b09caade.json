{"ast":null,"code":"var _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Music\\\\Music.jsx\";\nimport React from 'react';\nconst campfireStory = \"\";\nconst bootingUp = \"yourURLorIMPORTtoYOURmp3\";\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass Music extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTrack: null,\n      player: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\n      let track;\n\n      switch (this.state.selectedTrack) {\n        case \"Campfire Story\":\n          track = campfireStory;\n          break;\n\n        case \"Booting Up\":\n          track = bootingUp;\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\",\n          duration: this.player.duration\n        });\n      }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause();\n      } else if (this.state.player === \"stopped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrack: null\n        });\n      } else if (this.state.player === \"playing\" && prevState.player === \"paused\") {\n        this.player.play();\n      }\n    }\n  }\n\n  render() {\n    const list = [{\n      id: 1,\n      title: \"Campfire Story\"\n    }, {\n      id: 2,\n      title: \"Booting Up\"\n    }].map(item => {\n      return React.createElement(\"li\", {\n        key: item.id,\n        onClick: () => this.setState({\n          selectedTrack: item.title\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, item.title);\n    });\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"My Little Player\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, list), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.player === \"paused\" && React.createElement(\"button\", {\n      onClick: () => this.setState({\n        player: \"playing\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Play\"), this.state.player === \"playing\" && React.createElement(\"button\", {\n      onClick: () => this.setState({\n        player: \"paused\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Pause\"), this.state.player === \"playing\" || this.state.player === \"paused\" ? React.createElement(\"button\", {\n      onClick: () => this.setState({\n        player: \"stopped\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Stop\") : \"\"), this.state.player === \"playing\" || this.state.player === \"paused\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, currentTime, \" / \", duration) : \"\", React.createElement(\"audio\", {\n      ref: ref => this.player = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Music;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Music/Music.jsx"],"names":["React","campfireStory","bootingUp","getTime","time","isNaN","Math","floor","slice","Music","Component","state","selectedTrack","player","currentTime","duration","componentDidMount","addEventListener","e","setState","target","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","track","src","play","pause","render","list","id","title","map","item","ref"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst campfireStory = \"\";\r\nconst bootingUp = \"yourURLorIMPORTtoYOURmp3\";\r\n\r\nfunction getTime(time) {\r\n    if (!isNaN(time)) {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    }\r\n}\r\n\r\nclass Music extends React.Component {\r\n    state = {\r\n        selectedTrack: null,\r\n        player: \"stopped\",\r\n        currentTime: null,\r\n        duration: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.player.addEventListener(\"timeupdate\", e => {\r\n            this.setState({\r\n                currentTime: e.target.currentTime,\r\n                duration: e.target.duration\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.player.removeEventListener(\"timeupdate\", () => {});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.selectedTrack !== prevState.selectedTrack) {\r\n            let track;\r\n            switch (this.state.selectedTrack) {\r\n                case \"Campfire Story\":\r\n                    track = campfireStory;\r\n                    break;\r\n                case \"Booting Up\":\r\n                    track = bootingUp;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (track) {\r\n                this.player.src = track;\r\n                this.player.play();\r\n                this.setState({ player: \"playing\", duration: this.player.duration });\r\n            }\r\n        }\r\n        if (this.state.player !== prevState.player) {\r\n            if (this.state.player === \"paused\") {\r\n                this.player.pause();\r\n            } else if (this.state.player === \"stopped\") {\r\n                this.player.pause();\r\n                this.player.currentTime = 0;\r\n                this.setState({ selectedTrack: null });\r\n            } else if (\r\n                this.state.player === \"playing\" &&\r\n                prevState.player === \"paused\"\r\n            ) {\r\n                this.player.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const list = [\r\n            { id: 1, title: \"Campfire Story\" },\r\n            { id: 2, title: \"Booting Up\" }\r\n        ].map(item => {\r\n            return (\r\n                <li\r\n                    key={item.id}\r\n                    onClick={() => this.setState({ selectedTrack: item.title })}\r\n                >\r\n                    {item.title}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        const currentTime = getTime(this.state.currentTime);\r\n        const duration = getTime(this.state.duration);\r\n\r\n        return (\r\n            <>\r\n                <h1>My Little Player</h1>\r\n                <ul>{list}</ul>\r\n                <div>\r\n                    {this.state.player === \"paused\" && (\r\n                        <button onClick={() => this.setState({ player: \"playing\" })}>\r\n                            Play\r\n                        </button>\r\n                    )}\r\n                    {this.state.player === \"playing\" && (\r\n                        <button onClick={() => this.setState({ player: \"paused\" })}>\r\n                            Pause\r\n                        </button>\r\n                    )}\r\n                    {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                        <button onClick={() => this.setState({ player: \"stopped\" })}>\r\n                            Stop\r\n                        </button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </div>\r\n                {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                    <div>\r\n                        {currentTime} / {duration}\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                <audio ref={ref => (this.player = ref)} />\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Music"]},"metadata":{},"sourceType":"module"}