{"ast":null,"code":"import _slicedToArray from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React from 'react';\nimport styles from './Paginator.module.css';\n\nlet Paginator = ({\n  totalItemCount,\n  pageSize,\n  currentPage,\n  onPageChanged\n}) => {\n  let pagesCount = Math.ceil(totalItemCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n\n  let _useState = useState,\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, pages.map(p => {\n    return React.createElement(\"span\", {\n      className: currentPage === p && styles.selectedPage,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" \", p, \" \");\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/common/Paginator/Paginator.jsx"],"names":["React","styles","Paginator","totalItemCount","pageSize","currentPage","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","map","p","selectedPage","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,cAAD;AAAgBC,EAAAA,QAAhB;AAAyBC,EAAAA,WAAzB;AAAqCC,EAAAA;AAArC,CAAD,KAA0D;AACtE,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,cAAc,GAAGC,QAA3B,CAAjB;AACA,MAAIM,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACL,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGO,WAAvB,CAAnB;;AAN0E,kBAOlCC,QAPkC;AAAA;AAAA,MAOrEC,aAPqE;AAAA,MAOtDC,gBAPsD;;AAStE,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACQ,GAAN,CAAUC,CAAC,IAAI;AACZ,WAAO;AACH,MAAA,SAAS,EAAEd,WAAW,KAAKc,CAAhB,IAAqBlB,MAAM,CAACmB,YADpC;AAEH,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZf,QAAAA,aAAa,CAACa,CAAD,CAAb;AACH,OAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIEA,CAJF,MAAP;AAKH,GANA,CADL,CADJ;AAWH,CApBD;;AAsBA,eAAejB,SAAf","sourcesContent":["import React from 'react';\r\nimport styles from './Paginator.module.css';\r\n\r\n\r\nlet Paginator = ({totalItemCount,pageSize,currentPage,onPageChanged }) => {\r\n    let pagesCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\nlet portionCount = Math.ceil(pagesCount / portionSize)\r\nlet [portionNumber, setPortionNumber] = useState\r\n\r\n    return (\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span\r\n                    className={currentPage === p && styles.selectedPage}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p)\r\n                    }}> {p} </span>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n\r\n"]},"metadata":{},"sourceType":"module"}