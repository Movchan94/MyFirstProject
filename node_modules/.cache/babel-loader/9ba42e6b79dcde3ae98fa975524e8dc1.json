{"ast":null,"code":"import _objectSpread from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { getAuthUserData } from \"./AuthReducer\";\nimport thunk from \"redux-thunk\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false,\n  globalError: null\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default AppReducer;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/redux/AppReducer.js"],"names":["getAuthUserData","thunk","INITIALIZED_SUCCESS","initialState","initialized","globalError","AppReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":";AACA,SAAQA,eAAR,QAA8B,eAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAGA,IAAIC,YAAY,GAAG;AACdC,EAAAA,WAAW,EAAE,KADC;AAEfC,EAAAA,WAAW,EAAE;AAFE,CAAnB;;AAKA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,mBAAL;AACI,+BACOK,KADP;AAEIH,QAAAA,WAAW,EAAE;AAFjB;;AAIJ;AACI,aAAOG,KAAP;AAPR;AASH,CAVD;;AAaA,OAAO,MAAMG,kBAAkB,GAAE,OAAK;AAACD,EAAAA,IAAI,EAAEP;AAAP,CAAL,CAA1B;AAEP,OAAO,MAAMS,aAAa,GAAE,MAAKC,QAAD,IAAa;AAE7C,MAAIC,OAAO,GAAGD,QAAQ,CAACZ,eAAe,EAAhB,CAAtB;AACIc,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACCG,IADD,CACM,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHD;AAIH,CAPM;AAUP,eAAeJ,UAAf","sourcesContent":["\r\nimport {getAuthUserData} from \"./AuthReducer\";\r\nimport thunk from \"redux-thunk\";\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n     initialized: false,\r\n    globalError: null\r\n}\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess =()=>({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp =()=>(dispatch)=> {\r\n\r\nlet promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializedSuccess())\r\n    });\r\n}\r\n\r\n\r\nexport default AppReducer;\r\n"]},"metadata":{},"sourceType":"module"}