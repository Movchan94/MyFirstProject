{"ast":null,"code":"import _slicedToArray from \"C:\\\\it\\\\MyFirstProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileInfo.jsx\";\nimport React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\nimport usersPhoto from \"../../Users/Photo/usersPhoto.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile\n}) => {\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  if (!profile) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n  const myPhotoSelected = e => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = formData => {\n    saveProfile(formData).then(() => {});\n    setEditMode(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.descriptionBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: profile.photos.large || usersPhoto,\n    className: s.myPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), isOwner && React.createElement(\"input\", {\n    type: 'file',\n    onChange: myPhotoSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), editMode ? React.createElement(ProfileDataForm, {\n    profile: profile,\n    onSubmit: onSubmit,\n    initialValues: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) : React.createElement(ProfileData, {\n    profile: profile,\n    isOwner: isOwner,\n    toEditMode: () => {\n      setEditMode(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(ProfileStatusHooks, {\n    status: status,\n    updateStatus: updateStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nconst ProfileData = ({\n  profile,\n  isOwner,\n  toEditMode\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, isOwner && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: toEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"edit\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Full Name\"), \": \", profile.fullName), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Looking for a job\"), \": \", profile.lookingForAJob ? 'yes' : 'no'), profile.lookingForAJob && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"My skills\"), \": \", profile.lookingForAJobDescription), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"About me\"), \": \", profile.aboutMe), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Contacts\"), \": \", Object.keys(profile.contacts).map(key => {\n    return React.createElement(Contact, {\n      key: key,\n      contactTitle: key,\n      contactValue: profile.contacts[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  })));\n};\n\nconst Contact = ({\n  contactTitle,\n  contactValue\n}) => {\n  return React.createElement(\"div\", {\n    className: s.contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, contactTitle), \":\", contactValue);\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useState","s","Preloader","ProfileStatusHooks","usersPhoto","ProfileDataForm","ProfileInfo","profile","status","updateStatus","isOwner","savePhoto","saveProfile","editMode","setEditMode","myPhotoSelected","e","target","files","length","onSubmit","formData","then","descriptionBlock","photos","large","myPhoto","ProfileData","toEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","contact"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport usersPhoto from \"../../Users/Photo/usersPhoto.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const myPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(()=> {\r\n            \r\n        })\r\n\r\n        setEditMode(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || usersPhoto}\r\n                     className={s.myPhoto}/>\r\n                    {isOwner && <input type={'file'} onChange={myPhotoSelected}/>}\r\n                    {editMode\r\n                        ? <ProfileDataForm\r\n                            profile = {profile}\r\n                            onSubmit = {onSubmit}\r\n                            initialValues = {profile}\r\n                        />\r\n                        : <ProfileData\r\n                            profile={profile}\r\n                            isOwner={isOwner}\r\n                            toEditMode={() => {setEditMode(true)}}\r\n                        />}\r\n                <ProfileStatusHooks status={status}\r\n                                    updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={toEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full Name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My skills</b>: {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact\r\n                    key={key}\r\n                    contactTitle={key}\r\n                    contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n\r\n   }\r\n\r\n\r\n const Contact = ({contactTitle, contactValue}) => {\r\n            return<div className ={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\r\n        }\r\n\r\n  export default ProfileInfo;"]},"metadata":{},"sourceType":"module"}