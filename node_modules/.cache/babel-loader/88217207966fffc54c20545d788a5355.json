{"ast":null,"code":"var _jsxFileName = \"C:\\\\it\\\\MyFirstProject\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers } from '../../redux/UsersReducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUserCount, getUsers } from \"../../redux/UsersSelectors\";\nimport { connect } from \"react-redux\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const pageSize = this.props.pageSize;\n      this.props.getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          currentPage = _this$props.currentPage,\n          pageSize = _this$props.pageSize;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress:state.usersPage.followingInProgress\r\n\r\n    }\r\n}*/\n\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalItemCount: getTotalUserCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["C:/it/MyFirstProject/src/components/Users/UsersContainer.jsx"],"names":["React","follow","setCurrentPage","unfollow","toggleFollowingProgress","requestUsers","Users","Preloader","withAuthRedirect","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUserCount","getUsers","connect","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUserCount","users","followingInProgress","mapStateToProps","state","totalItemCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAIIC,uBAJJ,EAKIC,YALJ,QAMO,0BANP;AAOA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EACoBC,sBADpB,EAC4CC,aAD5C,EAEIC,WAFJ,EAGIC,iBAHJ,EAGuBC,QAHvB,QAIO,4BAJP;AAKA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,cAAN,SAA6BjB,KAAK,CAACkB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAOzCC,aAPyC,GAOxBC,UAAD,IAAgB;AAAA,YACrBC,QADqB,GACT,KAAKC,KADI,CACrBD,QADqB;AAE5B,WAAKC,KAAL,CAAWP,QAAX,CAAoBK,UAApB,EAAgCC,QAAhC;AACH,KAVwC;AAAA;;AACzCE,EAAAA,iBAAiB,GAAG;AAAA,wBACgB,KAAKD,KADrB;AAAA,UACTE,WADS,eACTA,WADS;AAAA,UACIH,QADJ,eACIA,QADJ;AAEhB,SAAKC,KAAL,CAAWP,QAAX,CAAoBS,WAApB,EAAiCH,QAAjC;AAEH;;AAODI,EAAAA,MAAM,GAAG;AACL,WAAO,0CACF,KAAKH,KAAL,CAAWI,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IADrC,EAEH,oBAAC,KAAD;AACI,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWK,cAD/B;AAEI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAH5B;AAII,MAAA,aAAa,EAAE,KAAKL,aAJxB;AAKI,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,KALtB;AAMI,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWrB,MANvB;AAOI,MAAA,QAAQ,EAAE,KAAKqB,KAAL,CAAWnB,QAPzB;AAQI,MAAA,mBAAmB,EAAE,KAAKmB,KAAL,CAAWO,mBARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAaH;;AA1BwC;AA8B7C;;;;;;;;;;;;;AAYA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEb,QAAQ,CAACgB,KAAD,CADZ;AAEHV,IAAAA,QAAQ,EAAER,WAAW,CAACkB,KAAD,CAFlB;AAGHC,IAAAA,cAAc,EAAElB,iBAAiB,CAACiB,KAAD,CAH9B;AAIHP,IAAAA,WAAW,EAAEd,cAAc,CAACqB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEd,aAAa,CAACmB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAElB,sBAAsB,CAACoB,KAAD;AANxC,GAAP;AAQH,CATD;;AAWA,eAAetB,OAAO,CAClBD,gBADkB,EAElBQ,OAAO,CAACc,eAAD,EAAkB;AACrB7B,EAAAA,MADqB;AAErBE,EAAAA,QAFqB;AAGrBD,EAAAA,cAHqB;AAIrBE,EAAAA,uBAJqB;AAKrBW,EAAAA,QAAQ,EAAEV;AALW,CAAlB,CAFW,CAAP,CASbY,cATa,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/UsersReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount, getUsers\r\n} from \"../../redux/UsersSelectors\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress:state.usersPage.followingInProgress\r\n\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n    })\r\n)(UsersContainer);\r\n\r\n"]},"metadata":{},"sourceType":"module"}