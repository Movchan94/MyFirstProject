{"version":3,"sources":["HOC/withAuthRedirect.jsx","components/Dialogs/addMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Compomemt","RedirectComponent","this","props","to","React","Component","connect","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","key","id","avaUser","messagesElements","messages","m","Message","message","newMessageBody","className","s","dialogsItems","values","addMessage","compose","dispatch","addMessageCreator"],"mappings":"sNAIIA,EAA6B,SAACC,GAAD,MAAW,CACxCC,OAAOD,EAAME,KAAKD,SAGTE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAMC,WAYtC,OAFqCC,YAAQZ,EAARY,CAAoCN,K,iJCdvEO,EAAcC,YAAiB,IAgBlBC,cAAU,CAACC,KAAM,wBAAjBD,EAdC,SAACP,GACjB,OACI,0BAAMS,SAAYT,EAAMU,cACpB,kBAACC,EAAA,EAAD,CACIC,YAAY,qBACZC,KAAM,iBACNC,UAAaC,IACbC,SAAY,CAACC,IAAUZ,KAE3B,6BACI,6CCqBDa,EA7BC,SAAClB,GAEb,IAAIP,EAAQO,EAAMmB,YAEdC,EAAmB3B,EAAM4B,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAACC,EAAA,EAAD,CAAYX,KAAMU,EAAEV,KAAMY,IAAKF,EAAEG,GAAIA,GAAIH,EAAEG,GAAIC,QAASJ,EAAEI,aACpGC,EAAmBnC,EAAMoC,SAASP,KAAI,SAAAQ,GAAC,OAAI,kBAACC,EAAA,EAAD,CAASC,QAASF,EAAEE,QAASP,IAAKK,EAAEJ,GAAIA,GAAII,EAAEJ,QACtEjC,EAAMwC,eAO7B,OAAKjC,EAAMN,OAEP,yBAAKwC,UAAWC,IAAEd,SACd,yBAAKa,UAAWC,IAAEC,cACbhB,GAGL,yBAAKc,UAAWC,IAAEN,UACd,6BAAMD,GAEN,kBAAC,EAAD,CAAanB,SAdJ,SAAC4B,GAClBrC,EAAMsC,WAAWD,EAAOJ,qBAGF,kBAAC,IAAD,CAAUhC,GAAK,Y,wBCF9BsC,sBACXnC,aAbkB,SAACX,GACnB,MAAO,CACH0B,YAAY1B,EAAM0B,gBAGD,SAACqB,GAEtB,MAAO,CACHF,WAAW,SAACL,GAAkBO,EAASC,YAAkBR,SAM7DrC,IAFW2C,CAGbrB","file":"static/js/6.e18d757c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state)=> ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Compomemt) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Compomemt {...this.props}/>\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <Field\r\n                placeholder='Enter your message'\r\n                name ='newMessageBody'\r\n                component = {Textarea}\r\n                validate = {[required, maxLength50 ]}\r\n            />\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )}\r\n    export default reduxForm({form: 'dialogAddMessageForm'})(MessageForm)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport MessageForm from \"./addMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements  = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} avaUser={d.avaUser}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n    let newMessageBody   = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage  = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to ={\"/login\"}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n\r\n                <MessageForm onSubmit = {addNewMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageCreator} from \"../../redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        dialogsPage:state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n\r\n    return {\r\n        addMessage:(newMessageBody)=>{dispatch(addMessageCreator(newMessageBody))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}